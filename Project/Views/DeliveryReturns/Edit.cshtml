@model Project.Models.Return.DeliveryReturn

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>DeliveryReturn</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.DeliveryReturnID)
    @Html.HiddenFor(model => model.ReturnItemID)
    @Html.HiddenFor(model => model.DriverID)
    @Html.HiddenFor(model => model.DeliveryDate)
    @Html.HiddenFor(model => model.FromTime)
    @Html.HiddenFor(model => model.ToTime)
    <div class="form-group">
        @Html.LabelFor(model => model.ReturnItemID, "ReturnItemID", htmlAttributes: new { @class = "control-label col-md-2", @disabled = "disabled" })
        <div class="col-md-10">
            @Html.DropDownList("ReturnItemID", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
            @Html.ValidationMessageFor(model => model.ReturnItemID, "", new { @class = "text-danger", @disabled = "disabled" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DriverID, "DriverID", htmlAttributes: new { @class = "control-label col-md-2", @disabled = "disabled" })
        <div class="col-md-10">
            @Html.DropDownList("DriverID", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
            @Html.ValidationMessageFor(model => model.DriverID, "", new { @class = "text-danger", @disabled = "disabled" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DeliveryDate, htmlAttributes: new { @class = "control-label col-md-2", @disabled = "disabled" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DeliveryDate, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.DeliveryDate, "", new { @class = "text-danger", @disabled = "disabled" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FromTime, htmlAttributes: new { @class = "control-label col-md-2", @disabled = "disabled" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FromTime, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.FromTime, "", new { @class = "text-danger", @disabled = "disabled" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ToTime, htmlAttributes: new { @class = "control-label col-md-2", @disabled = "disabled" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ToTime, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.ToTime, "", new { @class = "text-danger", @disabled = "disabled" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.DropDownListFor(model => model.Status,
               new[]
               {
          new SelectListItem{Text="Pending",Value="Pending"},
        new SelectListItem{Text="Recieved",Value="Recieved"},
        new SelectListItem{Text="Delivered",Value="Delivered"},
          new SelectListItem{Text="Complete",Value="Complete"},
               }

               , new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
