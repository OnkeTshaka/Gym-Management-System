@model Project.Models.Essentials.MembershipPlan
@using CaptchaMvc.HtmlHelpers
@using CaptchaMvc;
@{
    ViewBag.Title = "Edit";
}

<h2>Cancel Membership</h2>


@using (Html.BeginForm("Edit", "MembershipPlans", FormMethod.Post, new { enctype = "multipart/form-data", id = "fromCaptcha" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>MembershipPlan</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.PlanID)
    @Html.HiddenFor(model => model.JoinDate)
    @Html.HiddenFor(model => model.Shift)
    @Html.HiddenFor(model => model.Username)
    @Html.HiddenFor(model => model.Email)
    @Html.HiddenFor(model => model.IDNum)
    @Html.HiddenFor(model => model.Address)
    @Html.HiddenFor(model => model.Description)
    @Html.HiddenFor(model => model.MobileNumber)
    @Html.HiddenFor(model => model.Monthly_Fee)
    @Html.HiddenFor(model => model.Joining_Fee)
    @Html.HiddenFor(model => model.TotalCost)
    @Html.HiddenFor(model => model.trialPeriod)
    @Html.HiddenFor(model => model.PackId)
    @Html.HiddenFor(model => model.memberID)



    @*<div class="form-group">
            @Html.LabelFor(model => model.Shift, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Shift, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Shift, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.IDNum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IDNum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IDNum, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
        @Html.LabelFor(model => model.Monthly_Fee, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Monthly_Fee, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Monthly_Fee, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Joining_Fee, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Joining_Fee, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Joining_Fee, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TotalCost, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TotalCost, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TotalCost, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.trialPeriod, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.trialPeriod, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.trialPeriod, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PackId, "PackId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("PackId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PackId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.memberID, "memberID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("memberID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.memberID, "", new { @class = "text-danger" })
        </div>
    </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.JoinDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.JoinDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.JoinDate, "", new { @class = "text-danger" })
            </div>
        </div>*@


    <div class="form-group">
        @Html.LabelFor(model => model.CancelMember, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.CancelMember)
                @Html.ValidationMessageFor(model => model.CancelMember, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-12" style="margin-left:200px;color:#111;background-color:#fff;width:500px;">
            @*@Html.MathCaptcha()*@
            <div>
                @Html.Captcha("Try Again", length: 4, inputText: "Enter text Above", requiredMessageText: "Is required field")

            </div>
            <br />
            <p class="text-danger">  @ViewBag.ErrMessage </p>

        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
