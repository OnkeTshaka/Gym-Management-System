@model Project.Models.ManageStaff.Trainer

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
<div class="container" style="float:left;">

    @using (Html.BeginForm("Edit", "Trainers", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Trainer</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TrainerID)

        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group  col-md-6">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group  col-md-6">
            @Html.LabelFor(model => model.Contact_No, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contact_No, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Contact_No, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group  col-md-6">
            @Html.LabelFor(model => model.Session.SessionType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="color:#111;">
                @Html.DropDownList("SessionID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Session.SessionType, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group  col-md-6">
            @Html.LabelFor(model => model.ID_No, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ID_No, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ID_No, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group  col-md-6">
            @Html.LabelFor(model => model.Experience, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Experience, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Experience, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group  col-md-6">
            @Html.LabelFor(model => model.century, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.century, "20th", new { htmlAttributes = new { @class = "form-control" } })&nbsp; 20th
                @Html.RadioButtonFor(model => model.century, "21st", new { htmlAttributes = new { @class = "form-control" } })&nbsp; 21st

                @Html.ValidationMessageFor(model => model.century, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group ">
            @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="image1" onchange="readURL(this);" />
                @Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <img id="Picture" src="#" alt="" style="width:50px;height:50px;margin-bottom:20px;" />
        </div>
        <div class="col-md-6">
            <script type="text/javascript">
                //image preview
                function readURL(input) {
                    if (input.files && input.files[0]) {
                        var reader = new FileReader();

                        reader.onload = function (e) {
                            $('#Picture')
                                .attr('src', e.target.result)
                                .width(400)
                                .height(400);

                        };

                        reader.readAsDataURL(input.files[0]);
                    }
                }
            </script>
        </div>

        <div class="form-group col-md-6">
            <div class="col-md-offset-2 ">
                <input type="submit" value="Save" class="btn btn-block btn-info" required />
                <div>
                    <br />
                    @Html.ActionLink("Back to Trainers List", "Index", null, new { @class = "btn btn-block btn-success" })
                </div>
            </div>
        </div>
    </div>
    }
</div>


