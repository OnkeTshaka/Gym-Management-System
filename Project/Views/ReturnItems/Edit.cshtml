@model Project.Models.Return.ReturnItem

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "ReturnItems", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(m => m.ReturnItemID)
    <div class="form-group">
        @Html.LabelFor(model => model.ClientName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClientEmail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ClientEmail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ClientEmail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReturnDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ReturnDate, new { htmlAttributes = new { @class = "form-control",disabled=true } })
            @Html.ValidationMessageFor(model => model.ReturnDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(x => x.Status,

           new[]
           {
               new SelectListItem{Text="Pending",Value="Pending"},
                new SelectListItem{Text="Awaiting",Value="Awaiting"},
                new SelectListItem{Text="Delivered",Value="Delivered"},
                new SelectListItem{Text="Approved",Value="Approved"},
           },new {@class = "form-control"})
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReasonID, "ReasonID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ReasonID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ReasonID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Actions", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.selectAction, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.selectAction, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <table>
                <tr>
                    @{
                        List<Project.Models.Return.AssignedProductData> products = ViewBag.Products;
                        int cnt = 0;

                        foreach (var product in products)
                        {
                            if (cnt++ % 3 == 0)
                            {
                            @:</tr><tr>
                            }
                            @:<td>
                                <input type="checkbox"
                                       name="selectedProducts"
                                       value="@product.ProductID"
                                       @(Html.Raw(product.Assigned ? "checked=\"checked\"" : "")) />
                                @product.Name
                            @:</td>
                        }
                    @:</tr>
                    }
                </table>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
